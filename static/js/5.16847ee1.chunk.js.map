{"version":3,"sources":["../_util/wave.jsx","../timeline/TimelineItem.jsx","../timeline/Timeline.jsx","../timeline/index.jsx","../tag/CheckableTag.jsx","../_util/colors.js","../tag/index.jsx"],"names":["isHidden","element","Wave","node","insertExtraNode","document","extraNode","attributeName","styleForPesudo","waveColor","color","match","isNotGrey","test","TransitionEvents","findDOMNode","e","onClick","getComputedStyle","window","raf","cancel","csp","children","this","bindAnimationEvent","clearTimeout","React","__rest","s","t","Object","i","p","TimelineItem","props","getPrefixCls","customizePrefixCls","className","pending","dot","restProps","prefixCls","itemClassName","classNames","dotClassName","omit","style","borderColor","undefined","position","Timeline","_a","pendingDot","reverse","mode","pendingNode","classString","pendingItem","type","timeLineItems","getPositionCls","ele","idx","truthyItems","item","itemsCount","lastCls","items","pendingClass","readyClass","CheckableTag","checked","onChange","cls","handleClick","PresetColorTypes","tuple","PresetColorRegex","RegExp","Tag","visible","otherProps","isNeedWave","tagProps","warning","nextProps","isPresetColor","backgroundColor","onClose","afterClose","handleIconClick","closable","polyfill"],"mappings":"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","file":"static/js/5.16847ee1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport TransitionEvents from 'css-animation/lib/Event';\nimport raf from './raf';\nimport { ConfigConsumer } from '../config-provider';\nlet styleForPesudo;\n// Where el is the DOM element you'd like to test for visibility\nfunction isHidden(element) {\n    if (process.env.NODE_ENV === 'test') {\n        return false;\n    }\n    return !element || element.offsetParent === null;\n}\nfunction isNotGrey(color) {\n    // eslint-disable-next-line no-useless-escape\n    const match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n    if (match && match[1] && match[2] && match[3]) {\n        return !(match[1] === match[2] && match[2] === match[3]);\n    }\n    return true;\n}\nexport default class Wave extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.animationStart = false;\n        this.destroy = false;\n        this.onClick = (node, waveColor) => {\n            if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {\n                return;\n            }\n            const { insertExtraNode } = this.props;\n            this.extraNode = document.createElement('div');\n            const { extraNode } = this;\n            extraNode.className = 'ant-click-animating-node';\n            const attributeName = this.getAttributeName();\n            node.setAttribute(attributeName, 'true');\n            // Not white or transparnt or grey\n            styleForPesudo = styleForPesudo || document.createElement('style');\n            if (waveColor &&\n                waveColor !== '#ffffff' &&\n                waveColor !== 'rgb(255, 255, 255)' &&\n                isNotGrey(waveColor) &&\n                !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(waveColor) && // any transparent rgba color\n                waveColor !== 'transparent') {\n                // Add nonce if CSP exist\n                if (this.csp && this.csp.nonce) {\n                    styleForPesudo.nonce = this.csp.nonce;\n                }\n                extraNode.style.borderColor = waveColor;\n                styleForPesudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n                if (!document.body.contains(styleForPesudo)) {\n                    document.body.appendChild(styleForPesudo);\n                }\n            }\n            if (insertExtraNode) {\n                node.appendChild(extraNode);\n            }\n            TransitionEvents.addStartEventListener(node, this.onTransitionStart);\n            TransitionEvents.addEndEventListener(node, this.onTransitionEnd);\n        };\n        this.onTransitionStart = (e) => {\n            if (this.destroy)\n                return;\n            const node = findDOMNode(this);\n            if (!e || e.target !== node) {\n                return;\n            }\n            if (!this.animationStart) {\n                this.resetEffect(node);\n            }\n        };\n        this.onTransitionEnd = (e) => {\n            if (!e || e.animationName !== 'fadeEffect') {\n                return;\n            }\n            this.resetEffect(e.target);\n        };\n        this.bindAnimationEvent = (node) => {\n            if (!node ||\n                !node.getAttribute ||\n                node.getAttribute('disabled') ||\n                node.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            const onClick = (e) => {\n                // Fix radio button click twice\n                if (e.target.tagName === 'INPUT' || isHidden(e.target)) {\n                    return;\n                }\n                this.resetEffect(node);\n                // Get wave color from target\n                const waveColor = getComputedStyle(node).getPropertyValue('border-top-color') || // Firefox Compatible\n                    getComputedStyle(node).getPropertyValue('border-color') ||\n                    getComputedStyle(node).getPropertyValue('background-color');\n                this.clickWaveTimeoutId = window.setTimeout(() => this.onClick(node, waveColor), 0);\n                raf.cancel(this.animationStartId);\n                this.animationStart = true;\n                // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.\n                this.animationStartId = raf(() => {\n                    this.animationStart = false;\n                }, 10);\n            };\n            node.addEventListener('click', onClick, true);\n            return {\n                cancel: () => {\n                    node.removeEventListener('click', onClick, true);\n                },\n            };\n        };\n        this.renderWave = ({ csp }) => {\n            const { children } = this.props;\n            this.csp = csp;\n            return children;\n        };\n    }\n    componentDidMount() {\n        const node = findDOMNode(this);\n        if (!node || node.nodeType !== 1) {\n            return;\n        }\n        this.instance = this.bindAnimationEvent(node);\n    }\n    componentWillUnmount() {\n        if (this.instance) {\n            this.instance.cancel();\n        }\n        if (this.clickWaveTimeoutId) {\n            clearTimeout(this.clickWaveTimeoutId);\n        }\n        this.destroy = true;\n    }\n    getAttributeName() {\n        const { insertExtraNode } = this.props;\n        return insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    resetEffect(node) {\n        if (!node || node === this.extraNode || !(node instanceof Element)) {\n            return;\n        }\n        const { insertExtraNode } = this.props;\n        const attributeName = this.getAttributeName();\n        node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466\n        if (styleForPesudo) {\n            styleForPesudo.innerHTML = '';\n        }\n        if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n            node.removeChild(this.extraNode);\n        }\n        TransitionEvents.removeStartEventListener(node, this.onTransitionStart);\n        TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderWave}</ConfigConsumer>;\n    }\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nconst TimelineItem = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, className, color = '', children, pending, dot } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"color\", \"children\", \"pending\", \"dot\"]);\n    const prefixCls = getPrefixCls('timeline', customizePrefixCls);\n    const itemClassName = classNames({\n        [`${prefixCls}-item`]: true,\n        [`${prefixCls}-item-pending`]: pending,\n    }, className);\n    const dotClassName = classNames({\n        [`${prefixCls}-item-head`]: true,\n        [`${prefixCls}-item-head-custom`]: dot,\n        [`${prefixCls}-item-head-${color}`]: true,\n    });\n    return (<li {...omit(restProps, ['position'])} className={itemClassName}>\n          <div className={`${prefixCls}-item-tail`}/>\n          <div className={dotClassName} style={{ borderColor: /blue|red|green|gray/.test(color) ? undefined : color }}>\n            {dot}\n          </div>\n          <div className={`${prefixCls}-item-content`}>{children}</div>\n        </li>);\n}}\n  </ConfigConsumer>);\nTimelineItem.defaultProps = {\n    color: 'blue',\n    pending: false,\n    position: '',\n};\nexport default TimelineItem;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TimelineItem from './TimelineItem';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nexport default class Timeline extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderTimeline = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, pending = null, pendingDot, children, className, reverse, mode } = _a, restProps = __rest(_a, [\"prefixCls\", \"pending\", \"pendingDot\", \"children\", \"className\", \"reverse\", \"mode\"]);\n            const prefixCls = getPrefixCls('timeline', customizePrefixCls);\n            const pendingNode = typeof pending === 'boolean' ? null : pending;\n            const classString = classNames(prefixCls, {\n                [`${prefixCls}-pending`]: !!pending,\n                [`${prefixCls}-reverse`]: !!reverse,\n                [`${prefixCls}-${mode}`]: !!mode,\n            }, className);\n            const pendingItem = pending ? (<TimelineItem pending={!!pending} dot={pendingDot || <Icon type=\"loading\"/>}>\n        {pendingNode}\n      </TimelineItem>) : null;\n            const timeLineItems = reverse\n                ? [pendingItem, ...React.Children.toArray(children).reverse()]\n                : [...React.Children.toArray(children), pendingItem];\n            const getPositionCls = (ele, idx) => {\n                if (mode === 'alternate') {\n                    if (ele.props.position === 'right')\n                        return `${prefixCls}-item-right`;\n                    if (ele.props.position === 'left')\n                        return `${prefixCls}-item-left`;\n                    return idx % 2 === 0 ? `${prefixCls}-item-left` : `${prefixCls}-item-right`;\n                }\n                if (mode === 'left')\n                    return `${prefixCls}-item-left`;\n                if (mode === 'right')\n                    return `${prefixCls}-item-right`;\n                if (ele.props.position === 'right')\n                    return `${prefixCls}-item-right`;\n                return '';\n            };\n            // Remove falsy items\n            const truthyItems = timeLineItems.filter(item => !!item);\n            const itemsCount = React.Children.count(truthyItems);\n            const lastCls = `${prefixCls}-item-last`;\n            const items = React.Children.map(truthyItems, (ele, idx) => {\n                const pendingClass = idx === itemsCount - 2 ? lastCls : '';\n                const readyClass = idx === itemsCount - 1 ? lastCls : '';\n                return React.cloneElement(ele, {\n                    className: classNames([\n                        ele.props.className,\n                        !reverse && !!pending ? pendingClass : readyClass,\n                        getPositionCls(ele, idx),\n                    ]),\n                });\n            });\n            return (<ul {...restProps} className={classString}>\n        {items}\n      </ul>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTimeline}</ConfigConsumer>;\n    }\n}\nTimeline.Item = TimelineItem;\nTimeline.defaultProps = {\n    reverse: false,\n    mode: '',\n};\n","import Timeline from './Timeline';\nexport default Timeline;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nexport default class CheckableTag extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            const { checked, onChange } = this.props;\n            if (onChange) {\n                onChange(!checked);\n            }\n        };\n        this.renderCheckableTag = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, checked } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\"]);\n            const prefixCls = getPrefixCls('tag', customizePrefixCls);\n            const cls = classNames(prefixCls, {\n                [`${prefixCls}-checkable`]: true,\n                [`${prefixCls}-checkable-checked`]: checked,\n            }, className);\n            delete restProps.onChange; // TypeScript cannot check delete now.\n            return <span {...restProps} className={cls} onClick={this.handleClick}/>;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCheckableTag}</ConfigConsumer>;\n    }\n}\n","import { tuple } from './type';\n// eslint-disable-next-line import/prefer-default-export\nexport const PresetColorTypes = tuple('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport CheckableTag from './CheckableTag';\nimport { ConfigConsumer } from '../config-provider';\nimport { PresetColorTypes } from '../_util/colors';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nconst PresetColorRegex = new RegExp(`^(${PresetColorTypes.join('|')})(-inverse)?$`);\nclass Tag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: true,\n        };\n        this.handleIconClick = (e) => {\n            this.setVisible(false, e);\n        };\n        this.renderTag = (configProps) => {\n            const _a = this.props, { children } = _a, otherProps = __rest(_a, [\"children\"]);\n            const isNeedWave = 'onClick' in otherProps || (children && children.type === 'a');\n            const tagProps = omit(otherProps, [\n                'onClose',\n                'afterClose',\n                'color',\n                'visible',\n                'closable',\n                'prefixCls',\n            ]);\n            return isNeedWave ? (<Wave>\n        <span {...tagProps} className={this.getTagClassName(configProps)} style={this.getTagStyle()}>\n          {children}\n          {this.renderCloseIcon()}\n        </span>\n      </Wave>) : (<span {...tagProps} className={this.getTagClassName(configProps)} style={this.getTagStyle()}>\n        {children}\n        {this.renderCloseIcon()}\n      </span>);\n        };\n        warning(!('afterClose' in props), 'Tag', \"'afterClose' will be deprecated, please use 'onClose', we will remove this in the next version.\");\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return {\n                visible: nextProps.visible,\n            };\n        }\n        return null;\n    }\n    getTagStyle() {\n        const { color, style } = this.props;\n        const isPresetColor = this.isPresetColor();\n        return Object.assign({ backgroundColor: color && !isPresetColor ? color : undefined }, style);\n    }\n    getTagClassName({ getPrefixCls }) {\n        const { prefixCls: customizePrefixCls, className, color } = this.props;\n        const { visible } = this.state;\n        const isPresetColor = this.isPresetColor();\n        const prefixCls = getPrefixCls('tag', customizePrefixCls);\n        return classNames(prefixCls, {\n            [`${prefixCls}-${color}`]: isPresetColor,\n            [`${prefixCls}-has-color`]: color && !isPresetColor,\n            [`${prefixCls}-hidden`]: !visible,\n        }, className);\n    }\n    setVisible(visible, e) {\n        const { onClose, afterClose } = this.props;\n        if (onClose) {\n            onClose(e);\n        }\n        if (afterClose && !onClose) {\n            // next version remove.\n            afterClose();\n        }\n        if (e.defaultPrevented) {\n            return;\n        }\n        if (!('visible' in this.props)) {\n            this.setState({ visible });\n        }\n    }\n    isPresetColor() {\n        const { color } = this.props;\n        if (!color) {\n            return false;\n        }\n        return PresetColorRegex.test(color);\n    }\n    renderCloseIcon() {\n        const { closable } = this.props;\n        return closable ? <Icon type=\"close\" onClick={this.handleIconClick}/> : null;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTag}</ConfigConsumer>;\n    }\n}\nTag.CheckableTag = CheckableTag;\nTag.defaultProps = {\n    closable: false,\n};\npolyfill(Tag);\nexport default Tag;\n"],"sourceRoot":""}