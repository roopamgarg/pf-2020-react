{"version":3,"sources":["components/layouts/layout.js","components/experience/experienceCard.js","data/experience.js","components/experience/experience.js","components/about/about.js","components/projects/projectCard.js","data/projects.js","components/projects/projects.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","className","href","exact","activeClassName","target","type","children","ExperienceCard","data","designation","company","duration","description","map","Item","Experience","id","style","border","marginBottom","title","experience","About","color","ProjectCard","link","image","Projects","projects","project","Contact","action","method","rows","placeholder","name","required","size","htmlType","renderData","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a3ab4f1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./layout.css\";\nimport { Icon } from \"antd\";\nimport { Link,NavLink} from \"react-router-dom\";\nconst Layout = props => {\n  \n  return (\n    <div className=\"layout\">\n      <div className=\"layout-header\">\n        <div className=\"header\">\n          <div>\n            <div className=\"header-image\"></div>\n          </div>\n          <h1 className=\"header-name\">Roopam Garg</h1>\n          <p className=\"header-title\">Full Stack Web Developer</p>\n          <div className=\"header-dash\"></div>\n        </div>\n        <div className=\"layout-nav\">\n          <ul className=\"nav\">\n            <li className=\"nav-item\"><a href=\"#about\" exact activeClassName=\"active-link\">About</a></li>\n            <li className=\"nav-item\"><a href=\"#experience\" activeClassName=\"active-link\">Experience</a></li>\n            <li className=\"nav-item\"><a href=\"#projects\" activeClassName=\"active-link\">Projects</a></li>\n            <li className=\"nav-item\"><a href=\"#contact\" activeClassName=\"active-link\">Contact</a></li>\n          </ul>\n        </div>\n        <div className=\"layout-social-nav\">\n          <ul className=\"social-nav\">\n            <li className=\"nav-item\">\n              <a target=\"_blank\" href=\"https://www.instagram.com/_roopamgarg/\">\n                <Icon type=\"instagram\" />\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a target=\"_blank\" href=\"https://github.com/roopamgarg\">\n                <Icon type=\"github\" />\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                target=\"_blank\"\n                href=\"https://www.linkedin.com/in/roopam-garg-8135a8158/\"\n              >\n                <Icon type=\"linkedin\" />\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a target=\"_blank\" href=\"https://twitter.com/roopamg777\">\n                <Icon type=\"twitter\" />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"layout-content \">{props.children}</div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Timeline } from \"antd\";\nconst ExperienceCard = props => {\n  const { designation, company, duration, description } = props.data;\n  return (\n    <div>\n      <h2>{designation}</h2>\n      <p>{company}</p>\n      <p>{duration}</p>\n      <p className=\"description\">\n      <Timeline>\n          {\n            description.map((data) => <Timeline.Item className=\"description\">{data}</Timeline.Item>)\n          }\n        </Timeline>\n      </p>\n    </div>\n  );\n};\nexport default ExperienceCard","export default [\n  {\n    designation: \"Full Stack Web Developer\",\n    company: \"Pracify\",\n    duration: \"Nov 2019 - Present\",\n    description: [\n      `Build a B2B solution using MERN stack for the marketing domain\n            where companies can incentivize users for there tasks completions\n            and can also hire interns.`,\n      `Complete setup of servers on AWS EC2 including configurations for\n            request proxies and load balancers for handling heavy traffic.`,\n    ],\n  },\n  {\n    designation: \"Full Stack Web Developer\",\n    company: \"International Organisation Of Software Developers\",\n    duration: \"June 2019 - Oct 2019\",\n    description: [\n      `Build a B2C solution using MEAN stack for the Ed-tech domain\n            where users can improvise there tech skills.`,\n      `Build API's for 3 different different projects`,\n      `Deploy all the services of application to AWS EC2 instance.`,\n    ],\n  },\n  {\n    designation: \"Web Developer\",\n    company: \"Freelancing\",\n    duration: \"Jan 2019 - Present\",\n    description: [\n      `Monktree - Developed a solution for a book bank so that there users\ncan register by completing payment and have access to additional\nfeatures like exclusive subject notes and new internship opportunities`,\n      `leetcoaching - Design and developed a exam portal where 1000's of\nusers can give online MCQ based tests simultaneously with the help\nof load balancers.`,\n      `Minitroika - Design and Developed a event registration platform\nusing vanilla JavaScript and mailchimp API's`,\n    ],\n  },\n];\n","import React, { Fragment } from \"react\";\nimport { Timeline, PageHeader } from \"antd\";\nimport ExperienceCard from \"./experienceCard\";\nimport experience from '../../data/experience'; \nconst renderCards = () =>{\n    return experience.map(experience => (\n    <Timeline.Item>\n        <ExperienceCard data={experience}/>\n      </Timeline.Item>\n    ))\n}\nconst Experience = props => (\n<div id=\"experience\"> \n    <PageHeader\n      style={{\n        border: \"1px solid rgb(235, 237, 240)\",\n        marginBottom:\"2rem\"\n      }}\n    \n      title=\"Experience\"\n    />\n    <Timeline className=\"fadeIn\">\n        {renderCards()}\n    </Timeline>\n</div>\n);\nexport default Experience;","import React from \"react\";\nimport { PageHeader, Timeline, Tag } from \"antd\";\n\nconst About = (props) => (\n  <div id=\"about\">\n    <PageHeader\n      style={{\n        border: \"1px solid rgb(235, 237, 240)\",\n        marginBottom: \"2rem\",\n      }}\n      title=\"About\"\n    />\n    <Timeline className=\"fadeIn\">\n      <Timeline.Item>\n        <h2>About Me</h2>\n        <p>Born on 09 April 2001</p>\n        <p>From Delhi, India</p>\n\n        <p className=\"description\">\n          I am a Full Stack web developer with a strong eye for innovative\n          design and optimum strategies implementation for better user\n          experience.\n        </p>\n      </Timeline.Item>\n      <Timeline.Item>\n        <h2>Skills</h2>\n        <div>\n          <Tag color=\"blue\">C/C++</Tag>\n          <Tag color=\"blue\">Javascript</Tag>\n          <Tag color=\"blue\">MEAN Stack</Tag>\n          <Tag color=\"blue\">MERN Stack</Tag>\n          <Tag color=\"blue\">AWS</Tag>\n          <Tag color=\"blue\">Automation Testing</Tag>\n          <Tag color=\"blue\">CI/CD</Tag>\n          <Tag color=\"blue\">Data Structures</Tag>\n          <Tag color=\"blue\">Algorithms</Tag>\n        </div>\n      </Timeline.Item>\n      <Timeline.Item>\n        <h2>Education</h2>\n        <Timeline>\n          <Timeline.Item>\n            <p className=\"description\">Maharaja Agrasen Institute Of Technology</p>\n            <p>Bachelor of Technology - BTech information technology</p>\n            <p>2019 – 2022</p>\n          </Timeline.Item>\n\n          <Timeline.Item>\n            <p className=\"description\">Guru Nanak Dev Institute Of Technology</p>\n            <p>Diploma in Computer Science</p>\n            <p>2016 – 2019</p>\n          </Timeline.Item>\n        </Timeline>\n      </Timeline.Item>\n    </Timeline>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Timeline } from 'antd';\n\nconst ProjectCard = (props) => {\n    const {title,duration,description,link,image} = props.data\n    return (\n        <div>\n      <h2>{title}</h2>\n      <p>{duration}</p>\n      <p>\n        <Timeline>\n          {\n            description.map((data) => <Timeline.Item className=\"description\">{data}</Timeline.Item>)\n          }\n          <Timeline.Item><a target=\"_blank\" href={link}>See Project</a></Timeline.Item>\n        </Timeline>\n      </p>\n   \n    </div>\n    )\n}\n\nexport default ProjectCard","export default [\n  // {\n  //   title: \"IOSD Member Portal\",\n  //   duration: \"Aug 2019 – Sep 2019\",\n  //   description: `It is portal that can be accessed by students who joins IOSD .\n  //   Here they can watch online lectures prepared by mentors at IOSD ,\n  //   they can find open sourced projects of IOSD where they can contribute to according to there skills,\n  //   they also can read blogs ,find modules and assignments for more practice and knowledge ,\n  //   and they also keep track of events organised by IOSD`,\n  //   link:'http://member.iosd.tech/',\n  //   image:'http://member.iosd.tech/'\n  // },\n  {\n    title: \"Gitforker - social media for GitHub users\",\n    duration: \"Jan 2019 – Mar 2019\",\n    description: [\n      `Build a B2B solution using MERN stack for the marketing domain\n      where companies can incentivize users for there tasks completions\n      and can also hire interns.`,\n      `Complete setup of servers on AWS EC2 including configurations for\n      request proxies and load balancers for handling heavy traffic.`\n    ],\n    link:'http://gitforker.com/',\n    image:'https://gitforker.herokuapp.com/'\n  },\n  {\n    title: \"Readspeak - new rating platform for books\",\n    duration: \"Mar 2019 – June 2019\",\n    description: [\n      `Designed an Algorithm by which we can increase book ratings based\n      reputaion of user who likes the book`,\n      `All the books were fetched from Google Books API`,\n      `Complete Application is created on MERN stack technology and\n      Graph Ql`\n    ],\n    link:'http://readspeak.herokuapp.com/',\n    image:'https://readspeak.herokuapp.com/'\n  },\n  // {\n  //   title: \"Minitroika\",\n  //   duration: \"Aug 2019 – Sep 2019\",\n  //   description: `This website is for technical society in my diploma college where we use this site for student registration for events and membership , \n  //   to give them study material, and to show what we did and meet our team`,\n  //   link:'http://minitroika.github.io/',\n  //   image:'http://member.iosd.tech/'\n  // },\n  \n];\n","import React from \"react\";\nimport { PageHeader, Timeline } from \"antd\";\nimport ProjectCard from './projectCard'\nimport projects from '../../data/projects';\nconst renderProjects = () =>{\n    return projects.map(project => (\n        <Timeline.Item>\n            <ProjectCard data={project}/>\n        </Timeline.Item>\n    ))\n}\nconst Projects = props => (\n  <div id=\"projects\">\n    <PageHeader\n      style={{\n        border: \"1px solid rgb(235, 237, 240)\",\n        marginBottom:\"2rem\"\n\n      }}\n    \n      title=\"Projects\"\n    />\n    <Timeline className=\"fadeIn\">\n      {renderProjects()}\n    </Timeline>\n  </div>\n);\n\nexport default Projects;\n","import React from \"react\";\nimport { PageHeader, Input, Button } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nconst Contact = props => (\n  <div id=\"contact\">\n    <PageHeader\n      style={{\n        border: \"1px solid rgb(235, 237, 240)\"\n      }}\n      title=\"Contact\"\n    />\n    <form className=\"contact-form fadeIn\" action=\"https://formspree.io/mgeovzkr\" method=\"POST\">\n        <div className=\"pb-1 pt-2\">\n      <TextArea rows={8} placeholder=\"Your Message\" name=\"name\" />\n      </div>\n      <div className=\"pb-1\">\n      <Input type=\"email\" required placeholder=\"Your Email\" name=\"_replyto\" />\n      </div>\n      <div className=\"text-center\">\n      <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\n        Send\n      </Button>\n      </div>\n    </form>\n  </div>\n);\n\nexport default Contact;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { DatePicker, Timeline, PageHeader } from \"antd\";\nimport Layout from \"./components/layouts/layout\";\nimport Experience from \"./components/experience/experience\";\nimport About from \"./components/about/about\";\nimport Project from \"./components/projects/projects\";\nimport Contact from \"./components/contact/contact\";\n\nconst renderData = () => {\n // if (window.innerWidth <= 800) {\n    return (\n      <Fragment>\n        <About />\n\n        <Experience />\n        <Project />\n        <Contact />\n      </Fragment>\n    );\n  // } else {\n  //   return (\n  //     <Fragment>\n  //       <Route path=\"/\" exact component={About} />\n\n  //       <Route path=\"/experience\" exact component={Experience} />\n  //       <Route path=\"/projects\" exact component={Project} />\n  //       <Route path=\"/contact\" exact component={Contact} />\n  //     </Fragment>\n  //   );\n  // }\n};\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Layout>\n        {renderData()}\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}