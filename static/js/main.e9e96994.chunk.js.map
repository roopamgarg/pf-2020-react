{"version":3,"sources":["logo.svg","components/sideNav/sideNav.js","components/layouts/layout.js","components/experience/experienceCard.js","data/experience.js","components/experience/experience.js","components/about/about.js","components/projects/projectCard.js","data/projects.js","components/projects/projects.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideNav","props","className","to","exact","activeClassName","target","href","type","Layout","children","ExperienceCard","data","designation","company","duration","description","Experience","style","border","marginBottom","title","experience","map","Item","About","color","ProjectCard","link","image","Projects","projects","project","Contact","action","method","rows","placeholder","name","size","required","htmlType","renderData","window","innerWidth","console","log","process","path","component","Project","App","basename","forceRefresh","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9e96994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon } from 'antd';\r\n\r\nconst SideNav = (props) => (\r\n    <Fragment>\r\n    <div className=\"header\">\r\n          <div>\r\n            <div className=\"header-image\"></div>\r\n          </div>\r\n          <h1 className=\"header-name\">Roopam Garg</h1>\r\n          <p className=\"header-title\">Full Stack Web Developer</p>\r\n          <div className=\"header-dash\"></div>\r\n        </div>\r\n        <div className=\"layout-nav\">\r\n          <ul className=\"nav\">\r\n            <li className=\"nav-item\"><NavLink to=\"/\" exact activeClassName=\"active-link\">About</NavLink></li>\r\n            <li className=\"nav-item\"><NavLink to=\"/experience\" activeClassName=\"active-link\">Experience</NavLink></li>\r\n            <li className=\"nav-item\"><NavLink to=\"/projects\" activeClassName=\"active-link\">Projects</NavLink></li>\r\n            <li className=\"nav-item\"><NavLink to=\"contact\" activeClassName=\"active-link\">Contact</NavLink></li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"layout-social-nav\">\r\n          <ul className=\"social-nav\">\r\n            <li className=\"nav-item\">\r\n              <a target=\"_blank\" href=\"https://www.instagram.com/_roopamgarg/\">\r\n                <Icon type=\"instagram\" />\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a target=\"_blank\" href=\"https://github.com/roopamgarg\">\r\n                <Icon type=\"github\" />\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://www.linkedin.com/in/roopam-garg-8135a8158/\"\r\n              >\r\n                <Icon type=\"linkedin\" />\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a target=\"_blank\" href=\"https://twitter.com/roopamg777\">\r\n                <Icon type=\"twitter\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </Fragment>\r\n)\r\nexport default SideNav;","import React from \"react\";\r\nimport \"./layout.css\";\r\nimport {BackTop } from \"antd\";\r\n\r\nimport SideNav from \"../sideNav/sideNav\";\r\nconst Layout = props => {\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"layout-header\">\r\n        <SideNav />\r\n      </div>\r\n      <div className=\"layout-content \">\r\n        <BackTop />\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nconst ExperienceCard = props => {\r\n  const { designation, company, duration, description } = props.data;\r\n  return (\r\n    <div>\r\n      <h2>{designation}</h2>\r\n      <p>{company}</p>\r\n      <p>{duration}</p>\r\n      <p className=\"description\">{description}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default ExperienceCard","export default [\r\n    {\r\n        designation:\"Full Stack Web Developer\",\r\n        company:\"DU Express\",\r\n        duration:\"Nov 2019 - Present\",\r\n        description:`Here I have the tasks\r\n        to create complete backend in nodejs from scratch for website frontend and Android App,\r\n        frontend of admin panel in react, Implementing Continous Integration and continous deployment (CI/CD) of code for all repositories of project, \r\n        And to deploy whole application on AWS EC2 instance`,\r\n    },\r\n    {\r\n\r\n        designation:\"Full Stack Web Developer\",\r\n        company:\"International Organisation Of Software Developers\",\r\n        duration:\"June 2019 - Oct 2019\",\r\n        description:`Here I have the task to create a portal for students who are part of\r\n        IOSD. And the portal is divided into 3 parts Member, Chapter Admin,\r\n        and Super Admin. And I have written the frontend for all 3 panels in\r\n        Angularjs, the backend was written in nodejs and the whole\r\n        application is deployed on AWS EC2`,\r\n    },\r\n    {\r\n        designation:\"Front-end Developer\",\r\n        company:\"Minitroika\",\r\n        duration:\"Jan 2019 - Feb 2019\",\r\n        description:`Here I have the task to create a portal for students who are part of\r\n        Minitroka. As minitroika is a technical club this portal will help to check new updates and \r\n        events organized by minitroika and to register for those events `,\r\n    }\r\n]\r\n","import React, { Fragment } from \"react\";\r\nimport { Timeline, PageHeader } from \"antd\";\r\nimport ExperienceCard from \"./experienceCard\";\r\nimport experience from '../../data/experience'; \r\nconst renderCards = () =>{\r\n    return experience.map(experience => (\r\n    <Timeline.Item>\r\n        <ExperienceCard data={experience}/>\r\n      </Timeline.Item>\r\n    ))\r\n}\r\nconst Experience = props => (\r\n<Fragment> \r\n    <PageHeader\r\n      style={{\r\n        border: \"1px solid rgb(235, 237, 240)\",\r\n        marginBottom:\"2rem\"\r\n      }}\r\n    \r\n      title=\"Experience\"\r\n    />\r\n    <Timeline className=\"fadeIn\">\r\n        {renderCards()}\r\n    </Timeline>\r\n</Fragment>\r\n);\r\nexport default Experience;","import React from \"react\";\r\nimport { PageHeader, Timeline, Tag } from \"antd\";\r\n\r\nconst About = props => (\r\n  <div >\r\n    <PageHeader\r\n      style={{\r\n        border: \"1px solid rgb(235, 237, 240)\",\r\n        marginBottom: \"2rem\"\r\n      }}\r\n     \r\n      title=\"About\"\r\n    />\r\n    <Timeline className=\"fadeIn\">\r\n      <Timeline.Item>\r\n        <h2>About Me</h2>\r\n        <p>Born on 09 April 2001</p>\r\n        <p className=\"description\">\r\n          I'm a full-stack developer from India, I have a serious passion for\r\n          UI effects, animation and creating intuitive, dynamic user\r\n          experiences. Let's make something Special.\r\n        </p>\r\n      </Timeline.Item>\r\n      <Timeline.Item>\r\n          <h2>Skills</h2>\r\n          <div>\r\n          <Tag color=\"blue\">C/C++</Tag>\r\n          <Tag color=\"blue\">Javascript</Tag>\r\n          <Tag color=\"blue\">MEAN Stack</Tag>\r\n          <Tag color=\"blue\">MERN Stack</Tag>\r\n          <Tag color=\"blue\">AWS</Tag>\r\n          <Tag color=\"blue\">Automation Testing</Tag>\r\n          <Tag color=\"blue\">CI/CD</Tag>\r\n          \r\n\r\n          </div>\r\n      </Timeline.Item>\r\n      <Timeline.Item>\r\n        <h2>Education</h2>\r\n        <Timeline>\r\n          <Timeline.Item>\r\n            <p>Maharaja Agrasen Institute Of Technology</p>\r\n            <p>Bachelor of Technology - BTech information technology</p>\r\n            <p>2019 – 2022</p>\r\n          </Timeline.Item>\r\n          \r\n          <Timeline.Item>\r\n            <p>Guru Nanak Dev Institute Of Technology</p>\r\n            <p>Diploma in Information Technology</p>\r\n            <p>2016 – 2019</p>\r\n          </Timeline.Item>\r\n        </Timeline>\r\n      </Timeline.Item>\r\n      \r\n    </Timeline>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst ProjectCard = (props) => {\r\n    const {title,duration,description,link,image} = props.data\r\n    return (\r\n        <div>\r\n      <h2>{title}</h2>\r\n      <p>{duration}</p>\r\n      <p className=\"description\">{description}</p>\r\n    <p><a target=\"_blank\" href={link}>See Project</a></p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard","export default [\r\n  {\r\n    title: \"IOSD Member Portal\",\r\n    duration: \"Aug 2019 – Sep 2019\",\r\n    description: `It is portal that can be accessed by students who joins IOSD .\r\n    Here they can watch online lectures prepared by mentors at IOSD ,\r\n    they can find open sourced projects of IOSD where they can contribute to according to there skills,\r\n    they also can read blogs ,find modules and assignments for more practice and knowledge ,\r\n    and they also keep track of events organised by IOSD`,\r\n    link:'http://member.iosd.tech/',\r\n    image:'http://member.iosd.tech/'\r\n  },\r\n  {\r\n    title: \"Gitforker - social media for GitHub users\",\r\n    duration: \"Aug 2019 – Sep 2019\",\r\n    description: `It is private communication medium for GitHub users .\r\n     Here you can send messages privately to any GitHub user for your queries about there code.`,\r\n    link:'http://gitforker.com/',\r\n    image:'http://member.iosd.tech/'\r\n  },\r\n  {\r\n    title: \"Readspeak - new rating platform for books\",\r\n    duration: \"Aug 2019 – Sep 2019\",\r\n    description: `This platform is for peoples who generally confused in buying new books .\r\n    Here any user can come and give there comments and like any book they read earlier . \r\n    The more no. of likes on users comment help them to get more values of his likes to the book. \r\n    The value of his like is added to books point that help books to show above the others`,\r\n    link:'http://readspeak.herokuapp.com/',\r\n    image:'http://member.iosd.tech/'\r\n  },\r\n  {\r\n    title: \"Minitroika\",\r\n    duration: \"Aug 2019 – Sep 2019\",\r\n    description: `This website is for technical society in my diploma college where we use this site for student registration for events and membership , \r\n    to give them study material, and to show what we did and meet our team`,\r\n    link:'http://minitroika.github.io/',\r\n    image:'http://member.iosd.tech/'\r\n  },\r\n  \r\n];\r\n","import React from \"react\";\r\nimport { PageHeader, Timeline } from \"antd\";\r\nimport ProjectCard from './projectCard'\r\nimport projects from '../../data/projects';\r\nconst renderProjects = () =>{\r\n    return projects.map(project => (\r\n        <Timeline.Item>\r\n            <ProjectCard data={project}/>\r\n        </Timeline.Item>\r\n    ))\r\n}\r\nconst Projects = props => (\r\n  <div>\r\n    <PageHeader\r\n      style={{\r\n        border: \"1px solid rgb(235, 237, 240)\",\r\n        marginBottom:\"2rem\"\r\n\r\n      }}\r\n    \r\n      title=\"Projects\"\r\n    />\r\n    <Timeline className=\"fadeIn\">\r\n      {renderProjects()}\r\n    </Timeline>\r\n  </div>\r\n);\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport { PageHeader, Input, Button } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst Contact = props => (\r\n  <div>\r\n    <PageHeader\r\n      style={{\r\n        border: \"1px solid rgb(235, 237, 240)\"\r\n      }}\r\n      title=\"Contact\"\r\n    />\r\n    <form\r\n      className=\"contact-form fadeIn\"\r\n      action=\"https://formspree.io/mgeovzkr\"\r\n      method=\"POST\"\r\n    >\r\n      <div className=\"pb-1 pt-2\">\r\n        <TextArea rows={8} placeholder=\"Your Message\" name=\"name\" />\r\n      </div>\r\n      <div className=\"pb-1\">\r\n        <Input\r\n          size=\"large\"\r\n          type=\"email\"\r\n          required\r\n          placeholder=\"Your Email\"\r\n          name=\"_replyto\"\r\n        />\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nexport default Contact;\r\n","import React, { Fragment } from \"react\";\nimport logo from \"./logo.svg\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { DatePicker, Timeline, PageHeader } from \"antd\";\nimport Layout from \"./components/layouts/layout\";\nimport Experience from \"./components/experience/experience\";\nimport About from \"./components/about/about\";\nimport Project from \"./components/projects/projects\";\nimport Contact from \"./components/contact/contact\";\n\nconst renderData = () => {\n  if (window.innerWidth <= 800) {\n    return (\n      <Fragment>\n        <About />\n\n        <Experience />\n        <Project />\n        <Contact />\n      </Fragment>\n    );\n  } else {\n    console.log(process.env.PUBLIC_URL)\n    return (\n      <Fragment>\n        <Route path={process.env.PUBLIC_URL+'/'} exact component={About} />\n\n        <Route path={process.env.PUBLIC_URL+\"/experience\"} component={Experience} />\n        <Route path=\"/projects\" exact component={Project} />\n        <Route path=\"/contact\" exact component={Contact} />\n      </Fragment>\n    );\n  }\n};\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={\"https://roopamgarg.github.io/\"} forceRefresh={true}>\n        <Layout>\n        {renderData()}\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}